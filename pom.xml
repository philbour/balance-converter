<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.1</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	
	<groupId>org.philbour</groupId>
	<artifactId>balance-converter</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
 
	<name>balance-converter</name>
	<description>Currency Balance Converter</description>

	<properties>
		<java.version>17</java.version>
		<require.java.version>${java.version}</require.java.version>
		<maven.compiler.release>${java.version}</maven.compiler.release>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		
		<!-- Spring BOM overrides -->
		<junit-jupiter.version>5.10.2</junit-jupiter.version>

		<!-- Other 3rd party dependencies -->
		<awaitility.version>4.2.1</awaitility.version>
		<commons-collections4.version>4.4</commons-collections4.version>
		<jacoco.version>0.8.12</jacoco.version>
       
        <!-- Test dependencies -->
        <commons-io.version>2.16.1</commons-io.version>
        <awaitility.version>4.2.1</awaitility.version>
        <testcontainers.version>1.19.8</testcontainers.version>

		<!-- containerization -->
		<docker-spotify-plugin.version>1.4.13</docker-spotify-plugin.version>
	</properties>

	<dependencyManagement>
        <dependencies>               
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit-jupiter.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    
	<dependencies>
		<!-- Spring -->
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>2.6.0</version>
        </dependency>
        
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>${commons-collections4.version}</version>
		</dependency>
		<dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>

		<!-- test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- needed to run junit tests in eclipse -->
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-launcher</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>commons-io</groupId>
		   	<artifactId>commons-io</artifactId>
		   	<version>${commons-io.version}</version>
		    <scope>test</scope>
		</dependency>
		
		<dependency>
		    <groupId>org.testcontainers</groupId>
		    <artifactId>testcontainers</artifactId>
		    <scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>org.testcontainers</groupId>
		    <artifactId>junit-jupiter</artifactId>
		    <scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			 <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <useSystemClassLoader>true</useSystemClassLoader>
                    <useManifestOnlyJar>true</useManifestOnlyJar>
                    <!-- workaround for
                    https://github.com/docker-library/openjdk/issues/247 -->
                    <argLine>${argLine}
                        -Djdk.net.URLClassPath.disableClassPathURLCheck=true</argLine>
                </configuration>
                <executions>
                    <execution>
                        <id>default-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<execution>
						<id>prepare</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>${docker-spotify-plugin.version}</version>
				<configuration>
					<repository>${project.artifactId}</repository>
                    <tag>${project.version}</tag>
					<force>true</force>
					<buildArgs>
						<JAR_FILE>./target/${project.build.finalName}.jar</JAR_FILE>
						<VERSION>${project.version}</VERSION>
					</buildArgs>
				</configuration>
				<dependencies>
					<!-- Workaround for https://github.com/spotify/dockerfile-maven/issues/90 -->
					<dependency>
						<groupId>javax.activation</groupId>
						<artifactId>activation</artifactId>
						<version>1.1.1</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>build-image</id>
						<phase>install</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
					<execution>
						<id>tag-image</id>
						<phase>install</phase>
						<goals>
							<goal>tag</goal>
						</goals>
					</execution>
					<execution>
						<id>push-image</id>
						<phase>deploy</phase>
						<goals>
							<goal>push</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<tagNameFormat>@{project.version}</tagNameFormat>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
